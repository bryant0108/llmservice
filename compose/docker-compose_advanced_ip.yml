version: "3.9"

name: nchcsystem

networks:
  nchc:
    external: false
    
services:
                
  nchc_factory:
    container_name: nchc_factory
    image: factory:latest
    ports:
      - 7860:7860
      - 9999:9999      
    volumes:
      - ./storage:/storage    
      - ./storage/output:/output    
      - ./storage/jupyter_data:/workspace    
      - ./storage/hf_cache:/root/.cache/huggingface
      - ./storage/factory_data:/app/data
      - ./storage/factory_saves:/app/saves
      - ./storage/factory_cache:/app/cache
      - ./factory/evaluation/cmmlu:/app/evaluation/cmmlu
      - ./factory/src/webui.py:/app/src/webui.py
      - ./factory/src/llmtuner/webui/interface.py:/app/src/llmtuner/webui/interface.py
      - ./factory/src/llmtuner/webui/locales.py:/app/src/llmtuner/webui/locales.py
      - ./factory/src/llmtuner/eval/template.py:/app/src/llmtuner/eval/template.py
      - ./factory/src/llmtuner/data/template.py:/app/src/llmtuner/data/template.py     
    #user: root
    #environment:
      #GRANT_SUDO: "yes"
    environment:
      - TZ=Asia/Taipei
      - HF_TOKEN=${HF_TOKEN}
      - GRADIO_USER=${SYSTEM_USER}
      - GRADIO_PASSWORD=${SYSTEM_KEY}
      #- GRADIO_SERVER_PORT=
      #- GRADIO_SERVER_NAME=
      #- GRADIO_ROOT_PATH=
    restart: unless-stopped
    networks:
      - nchc
    extra_hosts:
      - host.docker.internal:host-gateway      
    #command: bash -c "llamafactory-cli webui && jupyter lab --NotebookApp.token=${SYSTEM_KEY} --notebook-dir=/workspace --port=9999"      
    working_dir: /workspace
    command: bash -c "cd /app && llamafactory-cli webui > /workspace/factory.log & jupyter lab --NotebookApp.token=${SYSTEM_KEY} --notebook-dir=/workspace --port=9999"      
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: "all"
              capabilities: [gpu]
 
  nchc_mergekit:
    container_name: nchc_mergekit
    image: registry.hf.space/arcee-ai-mergekit-gui
    pull_policy: always
    ports:
      - 8860:8860
    volumes:
      - ./storage/mergekit_tmp:/tmp
      - ./mergekit/app.py:/home/user/app/app.py
      - ./mergekit/examples:/home/user/app/examples
    environment:
      - HF_TOKEN=${HF_TOKEN}
      - GRADIO_USER=${SYSTEM_USER}
      - GRADIO_PASSWORD=${SYSTEM_KEY}
      - GRADIO_SERVER_PORT=8860
      #- GRADIO_SERVER_NAME=
      #- GRADIO_ROOT_PATH=
    restart: unless-stopped
    networks:
      - nchc 
    command: python app.py
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: "all"
              capabilities: [gpu]
              
  nchc_qdrant:
    container_name: nchc_qdrant
    image: qdrant/qdrant:v1.8.4
    pull_policy: always    
    ports:
      - 6333:6333
      #- 6334:6334
    #expose:
    #  - 6333
    #  - 6334
    #  - 6335
    #configs:
    #  - source: qdrant_config
    #    target: /qdrant/config/production.yaml
    volumes:
      - ./storage/qdrant_data:/qdrant_data
      #- ./qdrant_storage:/qdrant/storage
      #- ./qdrant_config.yaml:/qdrant/config/production.yaml
    environment:
      - QDRANT__SERVICE__API_KEY=${SYSTEM_KEY}
    restart: always
    networks:
      - nchc 

  nchc_anythingllm:
    container_name: nchc_anythingllm
    image: mintplexlabs/anythingllm
    ports:
      - "3001:3001"
    volumes:
      - ./storage/anythingllm_data:/app/server/storage
      - ./storage/anythingllm_hotdir:/app/collector/hotdir
      - ./storage/anythingllm_outputs:/app/collector/outputs
      - ./anythingllm_env.txt:/app/server/.env
    environment:
      - STORAGE_DIR=/app/server/storage
    user: "${UID:-1000}:${GID:-1000}"
    cap_add:
      - SYS_ADMIN
    restart: unless-stopped
    networks:
      - nchc
    extra_hosts:
      - host.docker.internal:host-gateway
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: "all"
              capabilities: [gpu]
              
  nchc_ollama:
    container_name: nchc_ollama
    image: ollama/ollama:latest
    pull_policy: always
    ports:
      - 11434:11434    
    volumes:
      - ./storage/ollama_data:/root/.ollama
      - ./storage/output:/output          
    tty: true
    restart: unless-stopped
    networks:
      - nchc
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: "all"
              capabilities: [gpu]
              
  nchc_oepnwebui:
    container_name: nchc_oepnwebui
    image: ghcr.io/open-webui/open-webui:main
    pull_policy: always
    ports:
      - 8080:8080
    volumes:
      - ./storage/openwebui_data:/app/backend/data
    restart: unless-stopped
    networks:
      - nchc
    depends_on:
      - nchc_ollama      
    environment:
      - '/ollama/api=http://nchc_ollama:11434/api'
      - 'OPENAI_API_BASE_URLS=${OPENAI_API_BASE_URLS}'
      - 'OPENAI_API_KEYS=${OPENAI_API_KEYS}'      
    extra_hosts:
      - host.docker.internal:host-gateway
     
  nchc_nginx:
    container_name: nchc_nginx
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/biobank_ssl:/ssl
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf 
      - ./nginx/anythingllm.conf:/etc/nginx/conf.d/anythingllm.conf 
      - ./nginx/openwebui.conf:/etc/nginx/conf.d/openwebui.conf 
      - ./nginx/ollama.conf:/etc/nginx/conf.d/ollama.conf
      - ./nginx/qdrant.conf:/etc/nginx/conf.d/qdrant.conf
      - ./nginx/factory.conf:/etc/nginx/conf.d/factory.conf
      - ./nginx/llmbook.conf:/etc/nginx/conf.d/llmbook.conf
      - ./nginx/mergekit.conf:/etc/nginx/conf.d/mergekit.conf      
      - ./nginx/htpasswd.txt:/etc/nginx/.htpasswd  
      - ./website/assets:/usr/share/nginx/html/assets
      - ./website/index_factory_ip.html:/usr/share/nginx/html/index.html
    restart: always
    networks:
        - nchc
    depends_on:
      - nchc_oepnwebui         
    extra_hosts:
      - host.docker.internal:host-gateway
      

#configs:
#  qdrant_config:
#    content: |
#      log_level: INFO 